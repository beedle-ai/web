name: Publish Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish:
    name: Publish Draft Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Get draft release
        id: draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the latest draft release
          DRAFT_JSON=$(gh api \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/releases \
            --jq '.[] | select(.draft == true)' \
            | head -n 1)

          if [ -z "$DRAFT_JSON" ]; then
            echo "❌ No draft release found"
            echo "Please make sure Release Drafter has created a draft release"
            exit 1
          fi

          # Extract release details
          RELEASE_ID=$(echo "$DRAFT_JSON" | jq -r '.id')
          TAG_NAME=$(echo "$DRAFT_JSON" | jq -r '.tag_name')
          RELEASE_NOTES=$(echo "$DRAFT_JSON" | jq -r '.body')

          echo "release_id=$RELEASE_ID" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

          # Save release notes for changelog
          echo "$RELEASE_NOTES" > RELEASE_NOTES.md

          echo "📦 Publishing draft release: $TAG_NAME"

      - name: Update package.json
        run: |
          VERSION="${{ steps.draft.outputs.tag_name }}"
          VERSION="${VERSION#v}"  # Remove 'v' prefix
          npm version $VERSION --no-git-tag-version --allow-same-version
          echo "Updated package.json to version $VERSION"

      - name: Update CHANGELOG.md
        run: |
          VERSION="${{ steps.draft.outputs.tag_name }}"
          VERSION="${VERSION#v}"  # Remove 'v' prefix
          DATE=$(date +%Y-%m-%d)

          # Create new changelog entry
          {
            echo "# $VERSION ($DATE)"
            echo ""
            cat RELEASE_NOTES.md
            echo ""
            echo ""
          } > new_changelog.md

          # Append existing changelog if it exists
          if [ -f CHANGELOG.md ]; then
            cat CHANGELOG.md >> new_changelog.md
          fi

          mv new_changelog.md CHANGELOG.md

          # Format files
          pnpm prettier --write package.json CHANGELOG.md

      - name: Commit changes
        env:
          HUSKY: 0
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add package.json CHANGELOG.md
          git commit -m "chore(release): ${{ steps.draft.outputs.tag_name }} [skip ci]

          - Update package.json version
          - Update CHANGELOG.md" || echo "No changes to commit"

          git push

      - name: Publish the release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Publish the draft release (this will also create the tag)
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/releases/${{ steps.draft.outputs.release_id }} \
            -f draft=false

          echo "✅ Published release: https://github.com/${{ github.repository }}/releases/tag/${{ steps.draft.outputs.tag_name }}"